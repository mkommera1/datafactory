{
	"name": "full_load_customers",
	"properties": {
		"activities": [
			{
				"name": "Lookup1",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "@concat('select * from ',pipeline().parameters.Schema,'.',pipeline().parameters.delta_control,' where tablename =','''',pipeline().parameters.source_table,''' order by highwatermark desc')\n",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "azure_sql_param",
						"type": "DatasetReference",
						"parameters": {
							"tablename": {
								"value": "@pipeline().parameters.delta_control",
								"type": "Expression"
							},
							"schemaname": {
								"value": "@pipeline().parameters.Schema",
								"type": "Expression"
							}
						}
					},
					"firstRowOnly": true
				}
			},
			{
				"name": "If Condition1_copy1",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "Lookup1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@contains(activity('Lookup1').output,'firstRow')",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "Copy data1_copy1",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "MySqlSource",
									"query": {
										"value": "@concat('select * from ',pipeline().parameters.source_table)",
										"type": "Expression"
									}
								},
								"sink": {
									"type": "DelimitedTextSink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									},
									"formatSettings": {
										"type": "DelimitedTextWriteSettings",
										"quoteAllText": true,
										"fileExtension": ".txt"
									}
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "ds_mysql_parameter",
									"type": "DatasetReference",
									"parameters": {
										"tablename": {
											"value": "@pipeline().parameters.source_table",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "ds_adls_parameter",
									"type": "DatasetReference",
									"parameters": {
										"foldername": {
											"value": "@pipeline().parameters.dest_foldername",
											"type": "Expression"
										},
										"filename": {
											"value": "@concat('data_',pipeline().TriggerTime,'.txt')",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "Lookup2_copy1",
							"type": "Lookup",
							"dependsOn": [
								{
									"activity": "Copy data1_copy1",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderStoredProcedureName": "[dbo].[insert_HighWaterMark]",
									"storedProcedureParameters": {
										"type": {
											"type": "String",
											"value": {
												"value": "INSERT",
												"type": "Expression"
											}
										},
										"newHighWaterMark": {
											"type": "Datetime",
											"value": {
												"value": "@pipeline().TriggerTime",
												"type": "Expression"
											}
										}
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"dataset": {
									"referenceName": "azure_sql_param",
									"type": "DatasetReference",
									"parameters": {
										"tablename": {
											"value": "@pipeline().parameters.delta_control",
											"type": "Expression"
										},
										"schemaname": {
											"value": "@pipeline().parameters.Schema",
											"type": "Expression"
										}
									}
								}
							}
						}
					],
					"ifTrueActivities": [
						{
							"name": "Copy data1_copy1_copy1",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "MySqlSource",
									"query": {
										"value": "@concat('select * from ',pipeline().parameters.source_table,' where lastmodifieddatetime >=''',activity('Lookup1').output.firstRow.highwatermark,'''')",
										"type": "Expression"
									}
								},
								"sink": {
									"type": "DelimitedTextSink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									},
									"formatSettings": {
										"type": "DelimitedTextWriteSettings",
										"quoteAllText": true,
										"fileExtension": ".txt"
									}
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "ds_mysql_parameter",
									"type": "DatasetReference",
									"parameters": {
										"tablename": {
											"value": "@pipeline().parameters.source_table",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "ds_adls_parameter",
									"type": "DatasetReference",
									"parameters": {
										"foldername": {
											"value": "@pipeline().parameters.dest_foldername",
											"type": "Expression"
										},
										"filename": {
											"value": "@concat('data_',pipeline().TriggerTime,'.txt')",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "Lookup2_copy1_copy1",
							"type": "Lookup",
							"dependsOn": [
								{
									"activity": "Copy data1_copy1_copy1",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderStoredProcedureName": "[dbo].[insert_HighWaterMark]",
									"storedProcedureParameters": {
										"newHighWaterMark": {
											"type": "Datetime",
											"value": {
												"value": "@pipeline().TriggerTime",
												"type": "Expression"
											}
										},
										"type": {
											"type": "String",
											"value": "UPDATE"
										}
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"dataset": {
									"referenceName": "azure_sql_param",
									"type": "DatasetReference",
									"parameters": {
										"tablename": {
											"value": "@pipeline().parameters.delta_control",
											"type": "Expression"
										},
										"schemaname": {
											"value": "@pipeline().parameters.Schema",
											"type": "Expression"
										}
									}
								}
							}
						}
					]
				}
			}
		],
		"parameters": {
			"delta_control": {
				"type": "string",
				"defaultValue": "delta_controltable"
			},
			"source_table": {
				"type": "string",
				"defaultValue": "ecomdb.customers"
			},
			"dest_container": {
				"type": "string",
				"defaultValue": "data"
			},
			"dest_foldername": {
				"type": "string",
				"defaultValue": "Delta_Customers"
			},
			"Schema": {
				"type": "string",
				"defaultValue": "dbo"
			}
		},
		"variables": {
			"pipelinetime": {
				"type": "String"
			}
		},
		"annotations": [],
		"lastPublishTime": "2023-09-11T16:41:21Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}